# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Quarkslab
# This file is distributed under the same license as the tritondse package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: tritondse \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-21 22:38+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../api/explorator.rst:2
msgid "SymbolicExplorator"
msgstr ""

#: of tritondse.symbolic_explorator.SymbolicExplorator:1
msgid ""
"Symbolic Exploration. This class is in charge of iterating executions "
"with the different seeds available in the workspace and generated along "
"the way."
msgstr ""
"Exploration Symbolique. Cette classe est en charge d'itérer les exécutions "
"avec les différentes graines disponibles dans l'espace de travail et générées "
"au fil de l'exécution."

#: of tritondse.symbolic_explorator.SymbolicExplorator.add_input_seed:1
msgid "Add the given bytes or Seed object as input for the exploration."
msgstr ""
"Ajoute les octets de la graine ou l'objet Seed comme entrée de l'exploration."

#: of tritondse.seeds_manager.SeedManager
#: tritondse.seeds_manager.SeedManager.add_new_seed
#: tritondse.seeds_manager.SeedManager.add_seed_queue
#: tritondse.seeds_manager.SeedManager.drop_seed
#: tritondse.seeds_manager.SeedManager.is_new_seed
#: tritondse.seeds_manager.SeedManager.post_execution
#: tritondse.symbolic_explorator.SymbolicExplorator.add_input_seed
msgid "Parameters"
msgstr "Paramètres"

#: of tritondse.symbolic_explorator.SymbolicExplorator.add_input_seed:3
msgid "input seed to add in the pending inputs to process"
msgstr "graine d'entrée à ajouter en queue des entrée à exécuter"

#: of tritondse.SymbolicExplorator.callback_manager:1
msgid ""
"CallbackManager global instance that will be transmitted to all "
":py:obj:`SymbolicExecutor`."
msgstr ""
"Instance globale de CallbackManager qui va être transmise à tous les "
":py:obj:`SymbolicExecutor`."

#: of tritondse.SymbolicExplorator.callback_manager
#: tritondse.seeds_manager.SeedManager.pick_seed
#: tritondse.symbolic_explorator.SymbolicExplorator.explore
msgid "Return type"
msgstr "Type de retour"

#: ../../docstring of tritondse.SymbolicExplorator.config:1
msgid "Configuration file"
msgstr "Fichier de configuration"

#: ../../docstring of tritondse.SymbolicExplorator.coverage:1
msgid ""
"GlobalCoverage object holding information about the global coverage. "
"*(not really meant to be manipulated by the user)*"
msgstr ""
"Object GlobalCoverage contenant toutes les informations concernant la couverture globale. "
"*(cet objet ne doit pas être manipulé par l'utilisateur)*"

#: of tritondse.symbolic_explorator.SymbolicExplorator.explore:1
msgid ""
"Start the symbolic exploration. That function holds until the exploration"
" is interrupted or finished."
msgstr ""
"Commence l'exploration symbolique. Cette fonction ne rend la main que lorsqu'elle est "
"interrompue ou bien que l'exploration termine."

#: of tritondse.seeds_manager.SeedManager.is_new_seed
#: tritondse.seeds_manager.SeedManager.pick_seed
#: tritondse.seeds_manager.SeedManager.seeds_available
#: tritondse.symbolic_explorator.SymbolicExplorator.explore
msgid "Returns"
msgstr "Renvoi"

#: of tritondse.symbolic_explorator.SymbolicExplorator.explore:4
msgid "the status of the exploration"
msgstr "status de l'exploration"

#: ../../docstring of tritondse.SymbolicExplorator.last_executors:1
msgid "last symbolic executor executed"
msgstr "dernier exécuteur symbolique exécuté"

#: ../../docstring of tritondse.SymbolicExplorator.program:1
msgid "Program being analyzed"
msgstr "Programme en cours d'analyse"

#: ../../docstring of tritondse.SymbolicExplorator.seeds_manager:1
msgid "Manager of seed, holding all seeds related data and various statistics"
msgstr "Objet manager de graines, contenant toutes les graines et les informations associées;"

#: ../../docstring of tritondse.SymbolicExplorator.status:1
msgid "status of the execution"
msgstr "status de l'exécution"

#: of tritondse.symbolic_explorator.SymbolicExplorator.step:1
msgid ""
"Perform a single exploration step. That means it execute a single "
":py:obj:`SymbolicExecutor`. Then it gives the hand back to the user."
msgstr ""
"Effectue une seule étape d'exploration. Cela exécute une seule instance de "
":py:obj:`SymbolicExecutor`. La main est ensuite rendue à l'utilisateur."


#: of tritondse.symbolic_explorator.SymbolicExplorator.stop_exploration:1
msgid "Interrupt the exploration"
msgstr "Interrompt l'exécution"

#: ../../docstring of tritondse.SymbolicExplorator.workspace:1
msgid "workspace object"
msgstr "objet d'espace de travail"

#: of tritondse.symbolic_explorator.ExplorationStatus:1
msgid "Enum representing the current state of the exploration"
msgstr "Enum qui représente l'état courant de l'exploration"

#: ../../api/explorator.rst:18
msgid "SeedManager"
msgstr ""

#: of tritondse.seeds_manager.SeedManager:1
msgid ""
"Seed Manager. This class is in charge of providing the next seed to "
"execute by prioritizing them. It also holds various sets of pending "
"seeds, corpus, crashes etc and manages them in the workspace."
msgstr ""
"Manager de Graines. Cette classe à en charge de fournir la prochaine graine "
"à exécuter en priorisant la plus adaptée. Elle content aussi différents ensemble "
"de graines, corpus, crashes et manage les fichiers associés dans l'espace de travail."

#: of tritondse.seeds_manager.SeedManager:6
msgid "It contains basically 2 types of seeds which are:"
msgstr ""
"Contient 2 types de graines qui sont:"

#: of tritondse.seeds_manager.SeedManager:8
msgid ""
"pending seeds (kept in the seed scheduler). These are the seeds that "
"might be selected to be run"
msgstr ""
"graines en attente *(conservées dans le scheduler)*. Ce sont les graines "
"suceptibles d'être choisies afin d'être exécutées"

#: of tritondse.seeds_manager.SeedManager:10
msgid ""
"seed consumed (corpus, crash, hangs) which are seeds not meant to be re-"
"executed as they cannot lead to new paths, all candidate paths are UNSAT "
"etc."
msgstr ""
"graines consumée (corpus, crash, hangs), qui n'ont pas vocation à être ré-exécutées "
"car elles ont été entièrement traitées."

#: of tritondse.seeds_manager.SeedManager:13
msgid "global coverage object. The instance will be updated by the seed manager"
msgstr ""
"objet de coverage global. Cet objet sera mis à jour pour le manager"

#: of tritondse.seeds_manager.SeedManager:15
msgid "workspace instance object."
msgstr "instance de workspace"

#: of tritondse.seeds_manager.SeedManager:17
msgid "maximum number of queries for  a given execution"
msgstr "nombre maximum de requêtes pour une exécution donée"

#: of tritondse.seeds_manager.SeedManager:19
msgid "seed scheduler object to use as scheduling strategy"
msgstr "scheduler de graines à utiliser comme stratégie d'ordonnancement des entrées"

#: of tritondse.seeds_manager.SeedManager.add_new_seed:1
msgid ""
"Add the given seed in the manager. The function uses its type to know "
"where to add the seed."
msgstr "Ajoute la graine dans le manager. Cette fonction utilise le type "
"pour savoir où l'ajouter de manière définitive."

#: of tritondse.seeds_manager.SeedManager.add_new_seed:4
msgid "seed to add"
msgstr "graine à ajouter"

#: of tritondse.seeds_manager.SeedManager.add_seed_queue:1
msgid ""
"Add a seed to to appropriate internal queue depending on its status. If "
"it is new it is added in pending seed, if OK, HANG or CRASH it the "
"appropriate set. **Note that the seed is not written in the workspace**"
msgstr ""
"Ajoute la graine dans la queue interne appropriée en fonction de son status. Si "
"elle est nouvelle elle est mise dans la queue en attente. Si elle est OK, HANG ou "
"CRASH elle va dans le set idoine. **La graine n'est pas écrite dans le workspace**"

#: of tritondse.seeds_manager.SeedManager.add_seed_queue:6
msgid "Seed to add in an internal queue"
msgstr "Graine à ajouter dans le manager"

#: of tritondse.seeds_manager.SeedManager.drop_seed:1
msgid ""
"Drop a seed that is not of interest anymore. The function thus switch its"
" status to ``OK_DONE`` and move it in the corpus. *(the seed is not "
"removed from the corpus)*"
msgstr ""
"Jête une graine qui n'est plus d'aucun intérêt. La fonction la passe en "
"OK_DONE et la déplace dans le corpus final *(la graine n'est pas supprimée du corpus)*."

#: of tritondse.seeds_manager.SeedManager.drop_seed:6
msgid "seed object to drop"
msgstr "object Seed à jeter"

#: of tritondse.seeds_manager.SeedManager.is_new_seed:1
msgid "Check if a seed is a new one (not into corpus, crash and hangs)"
msgstr "Vérifie si une graine est nouvelle, c'est à dire dans aucun des sets "
"ni aucune queue en attente."

#: of tritondse.seeds_manager.SeedManager.is_new_seed:3
msgid "The seed to test"
msgstr "La graine à tester"

#: of tritondse.seeds_manager.SeedManager.is_new_seed:5
msgid "True if the seed is a new one"
msgstr "Vrai si la graine est nouvelle"

#: of tritondse.seeds_manager.SeedManager.is_new_seed:7
msgid ""
"That function does not check that the seed is not in the pending seeds "
"queue"
msgstr "Cette fonction ne vérifie pas que la graine n'est pas dans les graines en attente."

#: of tritondse.seeds_manager.SeedManager.pick_seed:1
msgid "Get the next seed to be executed by querying it in the seed scheduler."
msgstr "Récupère la prochaine graine à exécuter en appelant le 'scheduler'."

#: of tritondse.seeds_manager.SeedManager.pick_seed:4
msgid "Seed to execute from the pending seeds"
msgstr "Graine à exécuter venant du sheduler."

#: of tritondse.seeds_manager.SeedManager.post_execution:1
msgid ""
"Function called after each execution. It updates the global code coverage"
" object, and tries to generate new paths through SMT in accordance with "
"the seed scheduling strategy."
msgstr ""
"Fonction appelée après chaque exécution. Elle met à jour la couverture "
"globale, et essaye de généerer de nouveaux chemins par SMT *(en accord avec "
la stratégie de scheduling)*."

#: of tritondse.seeds_manager.SeedManager.post_execution:5
msgid "The current execution"
msgstr "L'exécution courante"

#: of tritondse.seeds_manager.SeedManager.post_execution:7
msgid "The seed of the execution"
msgstr "La graine de l'exécution"

#: of tritondse.seeds_manager.SeedManager.post_exploration:1
msgid ""
"Function called at the end of exploration. It perform some stats "
"printing, but would also perform any clean up tasks. *(not meant to be "
"called by the user)*"
msgstr ""
"Fonction appelé à la fin de l'exploration. Elle effectue des stats mais "
"effectue aussi éventuellement des tâches de nettoyage. *(ne doit pas être appelée par l'utilisateur)*"

#: of tritondse.seeds_manager.SeedManager.seeds_available:1
msgid "Checks whether or not there is still pending seeds to process."
msgstr "Vérifie s'il reste des graines en attente à exécuter."

#: of tritondse.seeds_manager.SeedManager.seeds_available:3
msgid "True if seeds are still pending"
msgstr ""
"Vrai si des graines sont en attente"

