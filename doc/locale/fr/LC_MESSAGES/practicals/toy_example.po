# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Quarkslab
# This file is distributed under the same license as the tritondse package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: tritondse \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-23 10:22+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../practicals/toy_example.rst:2
msgid "Toy Example"
msgstr "Exemple jouet"

#: ../../practicals/toy_example.rst:4
msgid ""
"These toy examples will present you various use-cases containing a bug to"
" trigger. The goal is to trigger them using the tritondse exploration."
msgstr "Ces exemples montrent des cas d'usages contenant un crash à trouver."
"Le but est de les activer en utilisant l'exploration et les callbacks nécessaires."

#: ../../practicals/toy_example.rst:9
msgid "1. Non standard input"
msgstr "1. Entrée non-standard"

#: ../../practicals/toy_example.rst:11
msgid ""
"By default tritondse is able to inject input either on stdin either on "
"argv. The goal here is to trigger the bug by injection the symbolisation "
"at an arbitrary location."
msgstr "Par défaut TritonDSE est capable d'injecter l'entrée soit sur stdin soit sur argv. "
"Le but ici est d'activer le bug en injectant l'entrée symbolique à une adresse arbitraire."

#: ../../practicals/toy_example.rst:49
msgid "2. Symbolic read"
msgstr "2. Lecture symbolique"

#: ../../practicals/toy_example.rst:51
msgid ""
"By default the exploration just negate branches, but does not try to "
"perform state coverage on pointer values *(as it raises a lot of test-"
"cases potentially not interesting)*. The goal here is to perform manual "
"state coverage on pointer values."
msgstr "Par défaut l'exploration se contente de nier les branchements conditionnels, mais rien n'est fait "
"pour effectuer de la couverture sur les valeurs de pointeurs *(car cela lève de très nombreux cas de tests "
"poentiellement inintéressants)*. Le but ici est d'effectuer une couverture d'état sur les valeurs de pointeurs."

#: ../../practicals/toy_example.rst:78
msgid "3. Symbolic read & write"
msgstr "3. Lecture / écriture symbolique"

#: ../../practicals/toy_example.rst:80
msgid ""
"Same principle here, except that triggering the bug require resolving "
"some kind of a pointer aliasing issue."
msgstr "Le principe est le même sauf que activer le bug nécessite de résoudre le problème d'aliasing de pointeur."

#: ../../practicals/toy_example.rst:110
msgid "4. String length"
msgstr "4. Longueur d'une chaîne"

#: ../../practicals/toy_example.rst:112
msgid ""
"Symbolic execution hardly infers 'meta-properties' of data. For string "
"its length is a meta-property that the symbolic executor does not know "
"how to mutate. It can be an issue when performing coverage."
msgstr "L'exécution symbolique infère difficillement les méta-propriétés des données comme la longueur d'une chaine. "
"L'exécuteur n'a aucune manière de muter cette longueur et cela peut être problématique pour effectuer de la couverture."

#: ../../practicals/toy_example.rst:142
msgid "5. Off-by-One example"
msgstr "5. Exemple de Off-by-One"

#: ../../practicals/toy_example.rst:144
msgid ""
"Write a simple intrinsic function to obtain the stack buffer size during "
"exploration, and write a simple sanitizer for `strncpy` that checks that "
"no buffer overflow is taking place."
msgstr "Il faut ici écrire une fonctin simple pour obtenir la taille du tampon sur la pile "
"durant l'exploration et écrire le sanitiseur sur `strncpy` qui permet de vérifier "
"que le débordement à lieu."

