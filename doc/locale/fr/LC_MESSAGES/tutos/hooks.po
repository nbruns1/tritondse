# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Quarkslab
# This file is distributed under the same license as the tritondse package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: tritondse \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-23 10:22+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../tutos/hooks.ipynb:9
msgid "Playing with Hooks"
msgstr "Jouer avec les hooks"

#: ../../tutos/hooks.ipynb:11
msgid ""
"Setting hooks is the main interface with an execution and an exploration "
"to perform user-defined actions. Tritondse enables hooking the following "
"events:"
msgstr ""
"Positionner un hook est le mécanisme d'interface principal pour effectuer"
" de actions durant une exécution ou une exploration. Tritondse permet de "
"'hooker' les événements suivants:"

#: ../../tutos/hooks.ipynb:13
msgid "address reached"
msgstr "adresse atteinte"

#: ../../tutos/hooks.ipynb:14
msgid "instruction executed *(all of them)*"
msgstr "instruction exécutée *(toutes)*"

#: ../../tutos/hooks.ipynb:15
msgid "memory address read or written"
msgstr "adresse mémoire lue ou écrite"

#: ../../tutos/hooks.ipynb:16
msgid "register read or written"
msgstr "registre lu ou écrit"

#: ../../tutos/hooks.ipynb:17
msgid "function reached *(from its name)*"
msgstr "fonction atteinte *(à partir de son nom)*"

#: ../../tutos/hooks.ipynb:18
msgid "end of an execution"
msgstr "fin d'une exécution"

#: ../../tutos/hooks.ipynb:19
msgid "thread context switch"
msgstr "context-switch d'un thread"

#: ../../tutos/hooks.ipynb:20
msgid "new input creation *(before it gets appended in the pool of seeds)*"
msgstr ""
"nouvelles entrée générée *(avant qu'elle soit ajoutée dans le pool de "
"graines)*"

#: ../../tutos/hooks.ipynb:22
msgid ""
"The library introduces a ``CallbackManager`` object which enables "
"registering callbacks. A ``SymbolicExecutor`` do contains such object. In"
" the case of a ``SymbolicExplorator`` it also contains a callback_manager"
" instance, but this one will be transmitted to all subsequent "
"``SymbolicExecutor`` instances."
msgstr ""
"La bibliothèque introduit un objet ``CallbackManager`` qui permet "
"d'enregistrer des callbacks. Un objet ``SymbolicExecutor`` en contient "
"un. Un ``SymbolicExplorator`` en contient un aussi mais celui-ci est "
"partagé et transmis à toutes les instances sous-jacentes de "
"``SymbolicExecutor``."

#: ../../tutos/hooks.ipynb:33
msgid ""
"For this notebook we are going to reuse a ``SymbolicExecutor`` and "
"hooking various events of the run."
msgstr ""
"Pour ce notebook, nous allons utiliser un ``SymbolicExecutor`` et hooker "
"différents événements d'une exécution."

#: ../../tutos/hooks.ipynb:83
msgid "I. Instruction hooking"
msgstr "I. Hooking d'instructions"

#: ../../tutos/hooks.ipynb:94
msgid ""
"Instruction hooking enables hooking the execution of every instruction "
"executed regardless of theirs address etc."
msgstr ""
"Le hooking d'instruction permet d'effectuer une action sur chaque "
"instruction exécutée quelque que soit sont adresse."

#: ../../tutos/hooks.ipynb:96
msgid "The signature for an instruction hook is the following:"
msgstr "La signature pour une fonction de hooking d'instruction est:"

#: ../../tutos/hooks.ipynb:102
msgid "We can use it to print every instructions executed:"
msgstr ""
"On peux l'utiliser par exemple, pour afficher chaque instruction "
"exécutées:"

#: ../../tutos/hooks.ipynb:275
msgid ""
"We could also have used ``register_pre_instruction_callback`` but at this"
" point the ``Instruction`` object is not yet decoded so it prevent "
"getting its disassembly."
msgstr " "

#: ../../tutos/hooks.ipynb:286
#, fuzzy
msgid "## II. Address/Function hooking"
msgstr "## II. Hooking d'adresse et de fonction"

#: ../../tutos/hooks.ipynb:288
msgid "We can hook any address and perform any associated action."
msgstr ""
"On peux hooker n'importe quelle adresse pour y effectuer une action "
"particulière."

#: ../../tutos/hooks.ipynb:289
msgid ""
"We can also hook any function as long as the symbol is set. They both "
"have the same signature:"
msgstr ""
"On peux aussi hooker n'importe quelle fonction à partir de son nom *(s'il"
" est disponbile)*. Tout deux on la même signature:"

#: ../../tutos/hooks.ipynb:295
msgid ""
"For the purpose of the challenge let’s hook the compare instruction and "
"patch de ZF flag to force looping. Let’s also hook the ``puts`` function "
"to print the string given to each call."
msgstr ""
"Pour le challenge, nous allons hooker l'instruction de comparaison et "
"patcher le drapeau ZF pour forcer l'exécution à refaire des tours de "
"boucle. On peux aussi hooker la fonction ``puts`` pour afficher la chaîne"
" de caractère envoyée en paramètre. "

#: ../../tutos/hooks.ipynb:398
msgid ""
"We did not really win where as we forced the ZF flag, but we have encoded"
" values on wich the comparison is made."
msgstr ""
"Nous n'avons pas réellement gagné aussi car le drapeau a été forcé mais "
"cela a permis de récupérer la valeur encodée avec laquelle la comparaison"
" était faite."

#: ../../tutos/hooks.ipynb:409
#, fuzzy
msgid "## III. Solving queries"
msgstr "## III. Résoudre des requêtes"

#: ../../tutos/hooks.ipynb:411
msgid ""
"We can modify our hook to directly solve by SMT what shall be the "
"appropriate value of CL in order to match the comparison."
msgstr ""
"On peux modifier le hook pour effectuer une requête SMT afin de demander "
"au solveur la valeur attendue pour CL afin que la comparaison soit "
"valide."

#: ../../tutos/hooks.ipynb:525
msgid "IV. Hooking exploration events"
msgstr "IV. Hooker les événements d'exploration"

#: ../../tutos/hooks.ipynb:527
msgid ""
"We can similarly put callbacks on a ``SymbolicExplorator``. In this case,"
" the callback manager will be shared among all the ``SymbolicExecutor`` "
"instances. Let’s hook every iteration to print some statistics:"
msgstr ""
"De la même manière on peux poser des callbacks sur les évenements "
"d'exploration. Par exemple on peux à chaque itération afficher quelques "
"statistiques:"

#~ msgid "TODO: Poser des hooks sur divers évenements"
#~ msgstr ""

#~ msgid "TODO: Solving queries"
#~ msgstr ""

