# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Quarkslab
# This file is distributed under the same license as the tritondse package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: tritondse \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-23 10:22+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../tutos/sanitizers.ipynb:9
msgid "Sanitizers & Probes"
msgstr "Sanitiseurs & Probes"

#: ../../tutos/sanitizers.ipynb:21
msgid "Probe mechanism"
msgstr "Méchanisme de probe (sonde)"

#: ../../tutos/sanitizers.ipynb:23
msgid ""
"TritonDSE introduces a probe mechanism. A probe is simply a class "
"exposing a set of callbacks to register to the execution. That enables "
"writing more complex checkers that can be easily registered on a callback"
" manager."
msgstr "TritonDSE introduit un mécanisme de probe (sonde). Il se matérialise par une classe "
"exposant différentes callbacks qui s'attacheront à une exécution. Cela permet "
"d'écrire des 'checker' plus complexes que l'on peux enregistrer facilement sur un "
"manageur de callback."

#: ../../tutos/sanitizers.ipynb:25
msgid "A probe as the following interface:"
msgstr "Une sonde a l'interface suivante:"

#: ../../tutos/sanitizers.ipynb:42
msgid ""
"So to write its own probe one, just have to call ``_add_callback`` with "
"its own hooks *(usually some other methods)*. They will automatically be "
"picked by the callback manager and registered."
msgstr "Pour écrire sa propre probe, il suffit d'appeler ``_add_callback`` avec "
"ses propre hooks *(typiquement d'autres méthodes)*. Celles-ci seront automatiquement "
"récupérée par le manager de callback et enregistrée sur celui-ci."

#: ../../tutos/sanitizers.ipynb:54
msgid "Using built-in sanitizers"
msgstr "Utiliser les sanitiseurs fournis"

#: ../../tutos/sanitizers.ipynb:56
msgid ""
"TritonDSE provides few simple sanitizers developped as probes. These "
"sanitizers are the following:"
msgstr "TritonDSE fournit quelques sanitiseurs développés comme des probes. Ces sanitiseurs "
"sont les suivants:"

#: ../../tutos/sanitizers.ipynb:58
msgid ""
"UAFSanitizer: checks for UaF using the simple built-in allocator *(in "
"ProcessState)*"
msgstr "UAFSanitizer: vérifie la précense de UaF en utilise l'allocateur de ``ProcessState``."

#: ../../tutos/sanitizers.ipynb:59
msgid ""
"NullDerefSanitizer: checks that no read or write in memory is performed "
"at address 0"
msgstr "NullDerefSanitizer: vérifie qu'aucune lecture ou écriture en mémoire n'est effectuée à l'adresse 0"

#: ../../tutos/sanitizers.ipynb:60
msgid ""
"FormatStringSanitizer: hooks various libc functions and checks that "
"format string are not controlled"
msgstr "FormatStringSanitizer: hook différentes fonctions de la libc pour vérifier que les chaînes de format "
"ne sont pas controllées par l'utilisateur"

#: ../../tutos/sanitizers.ipynb:61
msgid ""
"IntegerOverflowSanitizer: checks that the overflow flag is not set, and "
"also that it is not symbolic *(might raise false positives)*"
msgstr "IntegerOverflowSanitizer: vérifie que le drapeau OV (overflow) n'est pas positionné et qu'il "
"n'est pas symbolique *(cette probe lève de nombreux faux positifs)*"

#: ../../tutos/sanitizers.ipynb:63
msgid "The registration of a probe can be done as follows:"
msgstr "L'enregistrement d'une sonde se fait comme suit:"

#: ../../tutos/sanitizers.ipynb:89
msgid "The probe will now be enabled for all executions."
msgstr "La sonde est dès lors activée pour toutes les exécutions."

#: ../../tutos/sanitizers.ipynb:101
msgid "Writing a sanitizer"
msgstr "Écrire un sanitiseur"

#: ../../tutos/sanitizers.ipynb:103
msgid ""
"For the purpose of this tutorial, let’s write a sanitizer that will "
"checks ``fopen`` libc call and its variant ``freopen`` cannot be hijacked"
" to open an unwanted file *(here /etc/passwd)*. We are first going to "
"check that the string given in input is controllable and if it is, "
"checking by SMT that it can be the intended string."
msgstr "Pour ce tutoriel, nous allons écrire un sanitiseur qui va vérifier "
"que sur ``fopen`` et sa variante ``freopen`` le chemin donné n'est pas controllé "
"par l'utilisateur et qu'il ne peux pas être détourné pour lire */etc/passwd*. "
"Pour cela, il faut d'abord vérifier que la chaîne est controllable est si c'est le cas "
"vérifier par SMT qu'on peux y insérer la chaîne voulue."

#: ../../tutos/sanitizers.ipynb:158
msgid "Then we just have to register our new sanitizer!"
msgstr "Il ne reste alors plus qu'à enregistrer le sanitiseur."

#: ../../tutos/sanitizers.ipynb:179
msgid "There are no open in the crackme *(but one can try with another example)*"
msgstr "Le crackme ne contient pas de open, mais il est possible de tester avec un exemple jouet."

#~ msgid "Playing with Sanitizers"
#~ msgstr "Jouer avec les sanitiseurs"

