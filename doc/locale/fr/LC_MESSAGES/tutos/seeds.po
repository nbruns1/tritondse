# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Quarkslab
# This file is distributed under the same license as the tritondse package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: tritondse \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-23 10:22+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../tutos/seeds.ipynb:9
msgid "Managing Seeds"
msgstr "Gestion des entrées"

#: ../../tutos/seeds.ipynb:11
msgid ""
"This quick tutorial explains how to deal with input files manipulated and"
" generated during the execution. Let’s reuse the following base snippet. "
"The only difference here is that we are going to change the coverage "
"strategy to ``PATH_COVERAGE``."
msgstr "Ce tutoriel explique comment manipuler est gérer les graines (seed) "
"générées durant l'exécution. L'on va réutiliser le snippet de base à l'exception "
"de la stratégie de couverture qui va être positionnée en ``PATH_COVERAGE``."

#: ../../tutos/seeds.ipynb:116
msgid ""
"Just by exploring all possible paths we managed to solve the challenge. "
"Let’s play with the corpus."
msgstr "En explorant tous les chemins possible il a été possible de résoudre le challenge. "
"On peux alors manipuler le corpus."

#: ../../tutos/seeds.ipynb:128
msgid "Initial Corpus"
msgstr "Corpus initial"

#: ../../tutos/seeds.ipynb:130
msgid "There are two ways to provide an initial corpus:"
msgstr "Il y a deux manières de fournir un corpus intial:"

#: ../../tutos/seeds.ipynb:132
msgid ""
"providing in existing workspace directory and putting manually files in "
"the *worklist* directory"
msgstr "fournir un workspace existant, et placer manuellement les fichiers dans "
"le dossier *worklist*."

#: ../../tutos/seeds.ipynb:133
msgid ""
"via the API by adding the seed with ``add_input_seed``, it will "
"automatically be added in seeds to process."
msgstr "via l'API en ajoutant chaque graine avec ``add_input_seed`` qui va automatiquement "
"ajouter la graine dans la file d'attente."

#: ../../tutos/seeds.ipynb:145
msgid "Managing generated corpus"
msgstr "Gérer le corpus généré"

#: ../../tutos/seeds.ipynb:147
msgid ""
"**SymbolicExecutor**: This class is solely meant to execute a single "
"seed, not to produce new ones *(that is the purpose of the explorator)*. "
"However if a one wants to generate a new input to process in a callback, "
"it is possible with the method ``enqueue_seed``. That method will just "
"fill a list that will later be picked-up by the ``SymbolicExplorator`` "
"instance."
msgstr "**SymbolicExecutor**: Cette classe a vocation d'exécution une seule graine et non "
"pas en produire de nouvelle *(cette tâche est déléguée à l'explorateur)*. "
"Cependant, il est possible dans un callback durant un exécution d'ajouter des "
"entrées à exécuter dans les itérations suivantes. Pour cela ``enqueue_seed`` va "
"conserver les entrées et celles-ci seront récupérées par le ``SymbolicExplorator`` "
"à la fin de l'exécution."

#: ../../tutos/seeds.ipynb:158
msgid ""
"Here is a dummy hook function that manually negate a branching condition "
"to generate a new input file:"
msgstr "Voici une fonction de test qui manuellement nie un branchement conditionnel "
"pour générer une nouvelle entrée:"

#: ../../tutos/seeds.ipynb:188
msgid ""
"By default the status of the seed generated is ``FRESH`` but the seed you"
" generated is a faulty one, you can directly assign it the ``CRASH`` "
"status."
msgstr "Par défaut le status d'une graine générée est ``NEW`` et sera donc "
"exécutée dans une itération ultérieure. Cependant, si c'est une entrée de crash "
"il est possible de lui assigner directement le status ``CRASH``."

#: ../../tutos/seeds.ipynb:199
msgid ""
"**SymbolicExplorator**: All seeds generated during the exploration are "
"moved in the ``Workspace`` instance from the *worklist* folder to the "
"appropriate one *corpus*, *hangs* and *crashs*. One can iterate them "
"using the workspace instance."
msgstr "**SymbolicExplorator**: Toutes les graines générées durant l'exploration "
"sont gérées physiquement sur le disque par l'objet ``Workspace`` qui va les déplacer "
"dans le bon dossier selon le status (*corpus*, *hangs*, *crash*)."

#: ../../tutos/seeds.ipynb:260
msgid "Setting seed status"
msgstr "Positionner le status de la graine"

#: ../../tutos/seeds.ipynb:262
msgid ""
"During the execution one, can assign a status to the seed currently being"
" executed in any callback. *(Make sure not to override a status "
"previously set by another callback)*. At the end of an execution of no "
"status has been assigned, the seed is automatically assigned ``OK_DONE``."
msgstr "Durant l'exécution, l'utilisateur peux assigner un status à une graine. "
"Il faut juste vérifier ne pas écraser un status déja positionné. Si aucun status "
"n'a été assigné et que l'exécution s'est bien terminée, la graine reçoit le status "
"``OK_DONE``."

#~ msgid "[Advanced] Seed selection strategy"
#~ msgstr "[Avancé] Stratégie de sélection des entrées"

